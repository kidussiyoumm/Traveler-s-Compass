// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Traveler_Compass.Data;

#nullable disable

namespace Traveler_Compass.Migrations
{
    [DbContext(typeof(CompassDbContext))]
    partial class CompassDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Traveler_Compass.Models.Domain.Agent", b =>
                {
                    b.Property<int>("agentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("agentId"));

                    b.Property<string>("agentFristName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("agentGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("agentLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("companyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("passwordKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<long?>("phoneNumber")
                        .HasColumnType("bigint");

                    b.HasKey("agentId");

                    b.ToTable("agents");
                });

            modelBuilder.Entity("Traveler_Compass.Models.Domain.Itinerary", b =>
                {
                    b.Property<int>("itineraryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("itineraryId"));

                    b.Property<int?>("agentId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("packageId")
                        .HasColumnType("int");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("itineraryId");

                    b.HasIndex("agentId");

                    b.HasIndex("packageId");

                    b.HasIndex("userId");

                    b.ToTable("itineraries");
                });

            modelBuilder.Entity("Traveler_Compass.Models.Domain.Package", b =>
                {
                    b.Property<int>("packageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("packageId"));

                    b.Property<int>("agentId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("packageId");

                    b.HasIndex("agentId");

                    b.HasIndex("userId");

                    b.ToTable("packages");
                });

            modelBuilder.Entity("Traveler_Compass.Models.Domain.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAgent")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("passwordKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<long?>("phoneNumber")
                        .HasColumnType("bigint");

                    b.HasKey("userId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Traveler_Compass.Models.Domain.Itinerary", b =>
                {
                    b.HasOne("Traveler_Compass.Models.Domain.Agent", null)
                        .WithMany("itineraries")
                        .HasForeignKey("agentId");

                    b.HasOne("Traveler_Compass.Models.Domain.Package", "Package")
                        .WithMany("Itineraries")
                        .HasForeignKey("packageId");

                    b.HasOne("Traveler_Compass.Models.Domain.User", "user")
                        .WithMany("itineraries")
                        .HasForeignKey("userId");

                    b.Navigation("Package");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Traveler_Compass.Models.Domain.Package", b =>
                {
                    b.HasOne("Traveler_Compass.Models.Domain.Agent", "agent")
                        .WithMany("packages")
                        .HasForeignKey("agentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Traveler_Compass.Models.Domain.User", "user")
                        .WithMany("packages")
                        .HasForeignKey("userId");

                    b.Navigation("agent");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Traveler_Compass.Models.Domain.Agent", b =>
                {
                    b.Navigation("itineraries");

                    b.Navigation("packages");
                });

            modelBuilder.Entity("Traveler_Compass.Models.Domain.Package", b =>
                {
                    b.Navigation("Itineraries");
                });

            modelBuilder.Entity("Traveler_Compass.Models.Domain.User", b =>
                {
                    b.Navigation("itineraries");

                    b.Navigation("packages");
                });
#pragma warning restore 612, 618
        }
    }
}
